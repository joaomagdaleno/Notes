name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
        shell: bash

      - name: Install dependencies and Build Flutter app
        working-directory: universal_notes_flutter
        run: |
          flutter pub get
          flutter build windows

      - name: Verify build output structure
        run: |
          Write-Host "Verifying build output..."
          $buildPath = "universal_notes_flutter\\build\\windows\\x64\\runner\\Release"
          if (-not (Test-Path "$buildPath\\universal_notes_flutter.exe")) {
            Get-ChildItem -Path "universal_notes_flutter\\build" -Recurse | Select-Object FullName
            throw "Build output not found at $buildPath!"
          }
          Write-Host "Build output verified."

      - name: Prepare for packaging
        run: |
          $buildPath = "universal_notes_flutter\\build\\windows\\x64\\runner\\Release"
          # Copy the nuspec file into the build output directory
          Copy-Item -Path "universal_notes_flutter\\windows\\runner\\universal_notes_flutter.nuspec" -Destination $buildPath
          # Download nuget.exe into the build output directory
          Invoke-WebRequest -Uri https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -OutFile "$buildPath\\nuget.exe"

      - name: Create .nupkg
        working-directory: universal_notes_flutter/build/windows/x64/runner/Release
        run: |
          ./nuget.exe pack universal_notes_flutter.nuspec -Version ${{ steps.get_version.outputs.VERSION }}

      - name: Install Squirrel.Windows
        run: dotnet tool install --global Squirrel.Windows --version 2.0.1

      - name: Run Squirrel
        id: squirrel
        working-directory: universal_notes_flutter/build/windows/x64/runner/Release
        run: |
          $nupkgFile = "universal_notes_flutter.${{ steps.get_version.outputs.VERSION }}.nupkg"
          squirrel --releasify $nupkgFile --releaseDir releases

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'universal_notes_flutter/build/windows/x64/runner/Release/releases/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
